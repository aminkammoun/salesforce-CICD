
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  pull_request:
    branches: [ staging ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:   
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
   
    # Install java as it is required for the next step
    
    - name: 'Installing java'
      run: |
        sudo apt-get update
        sudo apt install default-jdk
    
  
    - name : "install node js"
      run: |
        sudo curl -s https://deb.nodesource.com/setup_16.x | sudo bash
        sudo apt install nodejs -y
        node -v
    
    # Runs a single command using the runners shell
    - name: 'Build and Deploy'
      run: |
        npm install sfdx-cli --global
        sfdx --version
    
    # Install SFDX scanner
    - name: 'Installing SFDX scanner'
      run: |
        npm i @salesforce/sfdx-scanner@3.10.0
        sfdx plugins
   # Runs a set of commands using the runners shell
    - name: 'Decrypt file'
      run: openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out server.key -base64 -K ${{secrets.DECRYPTION_KEY}} -iv ${{secrets.DECRYPTION_IV}}
    
    - name: 'Authorize'
      run: sfdx force:auth:jwt:grant --clientid=${{ secrets.COSUMER_KEY }} --username=${{ secrets.USERNAME }} --jwtkeyfile server.key --setdefaultdevhubusername --setalias=hub-org
    
    - name: 'install delta'
      run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins
          
    - name: 'Create delta packages for new, modified or deleted metadata'
      run: | 
        mkdir changed-sources
        sfdx sgd:source:delta --to "HEAD" --from "origin/staging" --output changed-sources/ --generate-delta --source force-app/ 
    # Now we can use the sfdx scanner to scan the code in the delta directory
    # The output of the scan is stored in a file called apexScanResults.sarif

            # The .sarif file can later be uploaded to github, so that we can see the 
            # results of the scan directly from the PR.

    - name: 'Scan code'
      run: |
        cd changed-sources
        sfdx scanner:run --format sarif --target './**/*.cls' --category "Design,Best Practices,Performance" --outfile 'apexScanResults.sarif'  
        cd ..
    
    # Now we upload the .sarif file as explained in the previous step
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: convert/apexScanResults.sarif
    
    - name: 'Run Test on Metadata'
      run: sfdx force:mdapi:deploy --deploydir=convert --testlevel=RunLocalTests --checkonly -u hub-org  
